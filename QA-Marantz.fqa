{"name":"QA-Marantz","type":"com.fibaro.binarySwitch","apiVersion":"1.2","initialProperties":{"viewLayout":{"$jason":{"body":{"header":{"style":{"height":"0"},"title":"quickApp_device_79"},"sections":{"items":[{"components":[{"name":"lblSource","style":{"weight":"1.2"},"text":"Source","type":"label","visible":true},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"name":"lblSur","style":{"weight":"1.2"},"text":"Sound mode","type":"label","visible":true},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"name":"lblVolStat","style":{"weight":"1.2"},"text":"Volume","type":"label","visible":true},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"components":[{"name":"bâton","style":{"weight":"0.50"},"text":"Power On","type":"button"},{"name":"btnoff","style":{"weight":"0.50"},"text":"Power Off","type":"button"}],"style":{"weight":"1.2"},"type":"horizontal"},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"components":[{"name":"btnswitchOnOff","style":{"weight":"0.50"},"text":"Mute","type":"button","visible":true},{"name":"bbtnswitchEcoOnOff","style":{"weight":"0.50"},"text":"Eco","type":"button","visible":true}],"style":{"weight":"1.2"},"type":"horizontal"},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"name":"label_1","style":{"weight":"1.2"},"text":"Volume","type":"label","visible":true},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"max":"100","min":"0","name":"Slidervolume","style":{"weight":"1.2"},"text":"","type":"slider","visible":true},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"components":[{"name":"btnvol30","style":{"weight":"0.25"},"text":"30%","type":"button","visible":true},{"name":"btnvol40","style":{"weight":"0.25"},"text":"40%","type":"button","visible":true},{"name":"btnvol50","style":{"weight":"0.25"},"text":"50%","type":"button","visible":true},{"name":"btnvol60","style":{"weight":"0.25"},"text":"60%","type":"button","visible":true}],"style":{"weight":"1.2"},"type":"horizontal"},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"name":"label","style":{"weight":"1.2"},"text":"Surround modes","type":"label","visible":true},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"components":[{"name":"btnDD","style":{"weight":"0.33"},"text":"Dolby Digital","type":"button","visible":true},{"name":"btnDTS","style":{"weight":"0.33"},"text":"DTS","type":"button","visible":true},{"name":"btn7ch","style":{"weight":"0.33"},"text":"Multi chan  stereo","type":"button","visible":true}],"style":{"weight":"1.2"},"type":"horizontal"},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"components":[{"name":"btnvirtuel","style":{"weight":"0.33"},"text":"Virtuel","type":"button","visible":true},{"name":"btnAtmos","style":{"weight":"0.33"},"text":"Atmos","type":"button","visible":true},{"name":"btnauto","style":{"weight":"0.33"},"text":"auto","type":"button","visible":true}],"style":{"weight":"1.2"},"type":"horizontal"},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"name":"label","style":{"weight":"1.2"},"text":"sources","type":"label","visible":true},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"components":[{"name":"btnbtlsat","style":{"weight":"0.20"},"text":"cbl/sat","type":"button","visible":true},{"name":"btntv","style":{"weight":"0.20"},"text":"TV","type":"button","visible":true},{"name":"btnmedia","style":{"weight":"0.20"},"text":"media","type":"button","visible":true},{"name":"btngame","style":{"weight":"0.20"},"text":"Game","type":"button","visible":true},{"name":"btntuner","style":{"weight":"0.20"},"text":"Tuner","type":"button","visible":true}],"style":{"weight":"1.2"},"type":"horizontal"},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"components":[{"name":"btnradio","style":{"weight":"0.20"},"text":"RADIO","type":"button","visible":true},{"name":"btnau1","style":{"weight":"0.20"},"text":"Aux1","type":"button","visible":true},{"name":"btnau2","style":{"weight":"0.20"},"text":"Aux2","type":"button","visible":true},{"name":"btnnet","style":{"weight":"0.20"},"text":"Net","type":"button","visible":true},{"name":"btnbt","style":{"weight":"0.20"},"text":"BT","type":"button","visible":true}],"style":{"weight":"1.2"},"type":"horizontal"},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"name":"label","style":{"weight":"1.2"},"text":"sound modes","type":"label","visible":true},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"components":[{"name":"btnmovie","style":{"weight":"0.20"},"text":"Movie","type":"button","visible":true},{"name":"btnMusic","style":{"weight":"0.20"},"text":"Music","type":"button","visible":true},{"name":"btngames","style":{"weight":"0.20"},"text":"Game","type":"button","visible":true},{"name":"btndirect","style":{"weight":"0.20"},"text":"Direct","type":"button","visible":true},{"name":"bttnPureDirect","style":{"weight":"0.20"},"text":"Pure Direct","type":"button","visible":true}],"style":{"weight":"1.2"},"type":"horizontal"},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"components":[{"name":"btnstereo","style":{"weight":"0.25"},"text":"Stereo","type":"button","visible":true},{"name":"btnautos","style":{"weight":"0.25"},"text":"Auto","type":"button","visible":true},{"name":"btnneural","style":{"weight":"0.25"},"text":"Neural","type":"button","visible":true},{"name":"btnstandard","style":{"weight":"0.25"},"text":"Standard","type":"button","visible":true}],"style":{"weight":"1.2"},"type":"horizontal"},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"}]}},"head":{"title":"quickApp_device_79"}}},"uiCallbacks":[{"callback":"uibtnonOnReleased","eventType":"onReleased","name":"bâton"},{"callback":"uibtnoffOnReleased","eventType":"onReleased","name":"btnoff"},{"callback":"uibtnmuteOnOff","eventType":"onReleased","name":"btnswitchOnOff"},{"callback":"uibtEcoOnOff","eventType":"onReleased","name":"bbtnswitchEcoOnOff"},{"callback":"uivolumeOnChanged","eventType":"onChanged","name":"Slidervolume"},{"callback":"uibtnvol30OnReleased","eventType":"onReleased","name":"btnvol30"},{"callback":"uibtnvol40OnReleased","eventType":"onReleased","name":"btnvol40"},{"callback":"uibtnvol50OnReleased","eventType":"onReleased","name":"btnvol50"},{"callback":"uibtnvol60OnReleased","eventType":"onReleased","name":"btnvol60"},{"callback":"uiddOnReleased","eventType":"onReleased","name":"btnDD"},{"callback":"uidtsOnReleased","eventType":"onReleased","name":"btnDTS"},{"callback":"ui7chstOnReleased","eventType":"onReleased","name":"btn7ch"},{"callback":"uivirtuelOnReleased","eventType":"onReleased","name":"btnvirtuel"},{"callback":"uiatmosOnReleased","eventType":"onReleased","name":"btnAtmos"},{"callback":"uiautoOnReleased","eventType":"onReleased","name":"btnauto"},{"callback":"uisatOnReleased","eventType":"onReleased","name":"btnbtlsat"},{"callback":"uitvOnReleased","eventType":"onReleased","name":"btntv"},{"callback":"uimediaOnReleased","eventType":"onReleased","name":"btnmedia"},{"callback":"uigameOnReleased","eventType":"onReleased","name":"btngame"},{"callback":"uitunerOnReleased","eventType":"onReleased","name":"btntuner"},{"callback":"uibtOnReleased","eventType":"onReleased","name":"btnradio"},{"callback":"uiaux1OnReleased","eventType":"onReleased","name":"btnau1"},{"callback":"uiaux2OnReleased","eventType":"onReleased","name":"btnau2"},{"callback":"uinetOnReleased","eventType":"onReleased","name":"btnnet"},{"callback":"uibtOnReleased","eventType":"onReleased","name":"btnbt"},{"callback":"uimovieReleased","eventType":"onReleased","name":"btnmovie"},{"callback":"uimusicOnReleased","eventType":"onReleased","name":"btnMusic"},{"callback":"uigameOnReleased","eventType":"onReleased","name":"btngames"},{"callback":"uidirectOnReleased","eventType":"onReleased","name":"btndirect"},{"callback":"uipdirectOnReleased","eventType":"onReleased","name":"bttnPureDirect"},{"callback":"uistereoOnReleased","eventType":"onReleased","name":"btnstereo"},{"callback":"uiauOnReleased","eventType":"onReleased","name":"btnautos"},{"callback":"uineuralOnReleased","eventType":"onReleased","name":"btnneural"},{"callback":"uistandardOnReleased","eventType":"onReleased","name":"btnstandard"}],"quickAppVariables":[{"name":"mute","value":"0"},{"name":"ip","value":"10.0.0.124"},{"name":"port","value":"23"},{"name":"eco","value":"0"}],"typeTemplateInitialized":true},"files":[{"name":"main","isMain":true,"isOpen":true,"content":"--------------------------------------------------------------------------------------------------------------------------------------\n--Base code https://www.domotique-fibaro.fr/topic/14309-quickapp-remote-denon/\n-- QuickApp Amplificateur Audio-Vidéo DENON AVR-X3200W\n-- Commutateur binaire\n-- HISTORIQUE\n-- Adapté de https://www.domotique-fibaro.fr/topic/3263-telecommande-pour-marantz-sr6008-et-similaires-5008-7008-etc/?tab=comments#comment-46332\n-- V3.2 (10/01/2015) Remote Marantz de SebcBien\n-- HC3 Version:\n-- V1.0 (14/05/2020) Remote Denon pour Home center 3 par fredokl et Maxime pour le site www.domotique-fibaro.fr\n-- Utilistaion :\n--      La connexion à l'amplifivateur Audio-Vidéo se fait par TELNET (port:23 par défaut)\n--      Créer les variables \"ip\" & \"port\"\n--      Ajouter les commandes que vous souhaitez dans la partie \"RÉGLAGES UTILISATEUR\"\n--      Toutes les modifications se font dans la partie \"RÉGLAGES UTILISATEUR\"\n--      À l'excepter des noms des appareils que vous utilisez chez vous\n--              ==> voir QuickApp:onDataReceived(data)\n--                      ==> VOS APPAREILS ICI\n-- Vous pouvez le modifier et l'améliorer à votre guise.\n--------------------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------------------\n--                                                      PARAMÈTRES UTILISATEUR                                                      --\n--------------------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------------------\nQuickApp._VERSION = \"1.0\" \nfunction QuickApp:onInit()\n    __TAG = \"QA_\"..plugin.mainDeviceId..\"Marantz\"\n    self:trace(\"DEBUT ========================================================\")\n    self.ip = self:getVariable(\"ip\")\n    self.port = tonumber(self:getVariable(\"port\"))\n    self:setVariable(\"mute\", \"0\")\n    self:setVariable(\"eco\", \"0\")\n    self.sock = net.TCPSocket() -- création d'une instance TCPSocket\n    self.isOn = false\n    self.isconnected = false\n    self:connect()    \n    self.pollingTime = 1000*60 -- 1min\n    self:refresh()\n    \nend\n--------------------------------------------------------------------------------------------------------------------------------------\n-- ON & OFF\n--------------------------------------------------------------------------------------------------------------------------------------\nfunction QuickApp:turnOn() self:debug(\"Turn On\") self:sendCommand(\"PWON\") self:getinfo() end\nfunction QuickApp:uibtnonOnReleased(event) self:turnOn() end\nfunction QuickApp:turnOff()self:debug(\"Turn off\") self:sendCommand(\"PWSTANDBY\") self:getinfo() end\nfunction QuickApp:uibtnoffOnReleased(event) self:turnOff() end\nfunction QuickApp:turnEight()self:debug(\"Tyigkghkghk\") self:sendCommand(\"MSSMART1\") self:getinfo() end\n\n--------------------------------------------------------------------------------------------------------------------------------------\n-- Boutons de volume\n--------------------------------------------------------------------------------------------------------------------------------------\nfunction QuickApp:uibtnvol30OnReleased(event) self:SetVol(30) self:getinfo() end\nfunction QuickApp:uibtnvol40OnReleased(event) self:SetVol(40) self:getinfo() end\nfunction QuickApp:uibtnvol50OnReleased(event) self:SetVol(50) self:getinfo() end\nfunction QuickApp:uibtnvol60OnReleased(event) self:SetVol(60) self:getinfo() end\n\nfunction QuickApp:uibtnmuteOnOff(event)\n    if self:getVariable(\"mute\") == \"0\" then\n        self:setVariable(\"mute\",\"1\")\n        self:sendCommand(\"MUON\") \n        self:updateProperty(\"value\", true)       \n        self:getinfo()\n    elseif self:getVariable(\"mute\") == \"1\" then\n        self:setVariable(\"mute\", \"0\")\n        self:sendCommand(\"MUOFF\")\n        self:updateProperty(\"value\", false)        \n        self:getinfo()\n    end\nend\n\n\n\nfunction QuickApp:uibtEcoOnOff(event)\n    if self:getVariable(\"eco\") == \"0\" then\n        self:setVariable(\"eco\",\"1\")\n        self:sendCommand(\"ECOON\") \n        self:updateProperty(\"value\", true)       \n        self:getinfo()\n    elseif self:getVariable(\"eco\") == \"1\" then\n        self:setVariable(\"eco\", \"0\")\n        self:sendCommand(\"ECOOFF\")\n        self:updateProperty(\"value\", false)        \n        self:getinfo()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n--------------------------------------------------------------------------------------------------------------------------------------\n-- Sound modes\n--------------------------------------------------------------------------------------------------------------------------------------\nfunction QuickApp:uiddOnReleased(event) self:debug(\"Dolby Digital\") self:sendCommand(\"MSDOLBY DIGITAL\") self:getinfo() end\nfunction QuickApp:uidtsOnReleased(event) self:debug(\"DTS\") self:sendCommand(\"MSDTS SURROUND\") self:getinfo() end\nfunction QuickApp:ui7chstOnReleased(event) self:debug(\"7 Canaux Stereo\") self:sendCommand(\"MSMCH STEREO\") self:getinfo() end\nfunction QuickApp:uiatmosOnReleased(event) self:debug(\"MSDOLBY ATMOS\") self:sendCommand(\"MSAURO3D\") self:getinfo() end\nfunction QuickApp:uivirtuelOnReleased(event) self:debug(\"MSVIRTUAL\") self:sendCommand(\"MSVIRTUAL\") self:getinfo() end\nfunction QuickApp:uiautoOnReleased(event) self:debug(\"MSAUTO\") self:sendCommand(\"MSAUTO\") self:getinfo() end\n\n--------------------------------------------------------------------------------------------------------------------------------------\n\n--------------------------------------------------------------------------------------------------------------------------------------\n                                                    -- sound modes\nfunction QuickApp:uimovieReleased(event) self:debug(\"Movie\") self:sendCommand(\"MSMOVIE\") self:getinfo() end\nfunction QuickApp:uimusicOnReleased(event) self:debug(\"Music\") self:sendCommand(\"MSMUSIC\") self:getinfo() end\nfunction QuickApp:uigameOnReleased(event) self:debug(\"Game\") self:sendCommand(\"MSGAME\") self:getinfo() end\nfunction QuickApp:uidirectOnReleased(event) self:debug(\"Direct\") self:sendCommand(\"MSDIRECT\") self:getinfo() end\nfunction QuickApp:uipdirectOnReleasedd(event) self:debug(\"P Direct\") self:sendCommand(\"MSPURE DIRECT\") self:getinfo() end\n\nfunction QuickApp:uistereoOnReleased(event) self:debug(\"Stereo\") self:sendCommand(\"MSSTEREO\") self:getinfo() end\nfunction QuickApp:uiauOnReleased(event) self:debug(\"Auto\") self:sendCommand(\"MSAUTO\") self:getinfo() end\nfunction QuickApp:uineuralOnReleased(event) self:debug(\"Neural\") self:sendCommand(\"MSNEURAL\") self:getinfo() end\nfunction QuickApp:uistandardOnReleased(event) self:debug(\"Standard\") self:sendCommand(\"MSSTANDARD\") self:getinfo() end\n\n\n                                                    \n--------------------------------------------------------------------------------------------------------------------------------------\n\n\n\n\nfunction QuickApp:uisatOnReleased(event) self:debug(\"cbl/sat\") self:sendCommand(\"SISAT/CBL\") self:getinfo() end\nfunction QuickApp:uitvOnReleased(event) self:debug(\"TV\") self:sendCommand(\"SITV\") self:getinfo() end\nfunction QuickApp:uimediaOnReleased(event) self:debug(\"Media\") self:sendCommand(\"SIMPLAY\") self:getinfo() end\nfunction QuickApp:uigameOnReleased(event) self:debug(\"Game\") self:sendCommand(\"SIGAME\") self:getinfo() end\nfunction QuickApp:uitunerOnReleased(event) self:debug(\"Tuner\") self:sendCommand(\"SITUNER\") self:getinfo() end\n                                        -- row 2\nfunction QuickApp:uiradioOnReleased(event) self:debug(\"Radio\") self:sendCommand(\"SIHDRADIO\") self:getinfo() end\nfunction QuickApp:uiaux1OnReleased(event) self:debug(\"Aux1\") self:sendCommand(\"SIAUX1\") self:getinfo() end\nfunction QuickApp:uiaux2OnReleased(event) self:debug(\"Aux2\") self:sendCommand(\"SIAUX2\") self:getinfo() end\nfunction QuickApp:uinetOnReleased(event) self:debug(\"Net\") self:sendCommand(\"SINET\") self:getinfo() end\nfunction QuickApp:uibtOnReleased(event) self:debug(\"BT\") self:sendCommand(\"SIBT\") self:getinfo() end                                  \n--------------------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------------------\n--                                                 NE RIEN TOUCHER À PARTIR D'ICI                                                   --\n--------------------------------------------------------------------------------------------------------------------------------------\n-- VOLUME & SLIDER\n--------------------------------------------------------------------------------------------------------------------------------------\nfunction QuickApp:SetVol(value)\n    if value < 10 then value = \"0\" ..value end\n    self:sendCommand(\"MV\" ..tostring(value))\n    self:trace(\"Volume\", value)\nend\n\nfunction QuickApp:uivolumeOnChanged(event)\n   local value = event.values[1]\n   self:SetVol(value)\n   self:getinfo()\nend\nfunction QuickApp:SetVolb(value)\n    if value < 10 then value = \"0\" ..value end\n    self:sendCommand(\"CVSW\" ..tostring(value))\n    self:trace(\"Volume\", value)\nend\nfunction QuickApp:uivolumeOnChangedb(event)\n   local value = event.values[1]\n   self:SetVolb(value)\n   self:getinfo()\nend\n\n--------------------------------------------------------------------------------------------------------------------------------------\n-- REQUÊTE HTTP\n--------------------------------------------------------------------------------------------------------------------------------------\nfunction QuickApp:getinfo()\n    self:sendCommand(\"PW?\") -- Power\n    self:sendCommand(\"SI?\")  -- source\n    self:sendCommand(\"MS?\") -- Surround modes\n    self:sendCommand(\"MV?\") -- volume\n    end\n\nfunction QuickApp:uigetinfo()\nself:getinfo()\nend\n\nfunction QuickApp:sendCommand(strToSend)\nlocal command = strToSend ..\"\\r\"\n    self.sock:write(command, {\n        success = function() -- fonction qui sera déclenchée lorsque les données seront correctement envoyées\n            --self:trace(\"data sent\" ..command)\n        end,\n        error = function(err) -- fonction qui sera déclenchée en cas d'erreur de transmission de données\n            self:trace(\"error while sending data\")\n        end\n    })\nend\n \n-- méthode pour lire les données du socket\n-- puisque la méthode elle-même a été bouclée, elle ne doit pas être appelée depuis un autre emplacement que QuickApp:connect()\nfunction QuickApp:waitForResponseFunction()\n    self.sock:read({ -- lire un paquet de données depuis le socket\n        success = function(data)\n            self:onDataReceived(data) -- traitement des données reçues\n            self:waitForResponseFunction() -- lecture en boucle des données\n        end,\n        error = function() -- une fonction qui sera appelée en cas d'erreur lors de la tentative de réception de données, par ex. déconnexion d'un socket\n            self:trace(\"response error\")\n            self.sock:close() -- socket fermé\n            fibaro.setTimeout(5000, function() self:connect() end) -- tentative de reconnexion (toutes les 5 secondes)\n        end\n    })\nend\n \n-- méthode pour ouvrir une connexion TCP.\n-- si la connexion réussit, la boucle de lecture des données sera appelée QuickApp:waitForResponseFunction ()\nfunction QuickApp:connect()\n    self.sock:connect(self.ip, self.port, { -- connexion à l'appareil avec l'adresse IP et le port spécifiés\n        success = function() -- la fonction sera déclenchée si la connexion est correcte\n            self:trace(\"connected\")\n            self.isconnected = true\n            self:waitForResponseFunction() -- lancement d'une \"boucle\" de lecture de données\n        end,\n        error = function(err) -- une fonction qui sera déclenchée en cas de connexion incorrecte, par ex. timeout\n            self.sock:close() -- fermeture du socket\n            self:warning(\"connection error\")\n            self:updateView(\"lblSource\", \"text\", \"Source: N/A\")\n            self:updateView(\"lblSur\", \"text\", \"Sound mode: N/A\")\n            self:updateView(\"lblVolStat\", \"text\", \"Volume: N/A\")\n            self:updateView(\"Slidervolume\", \"value\", \"0\")\n            fibaro.setTimeout(5000, function() self:connect() end) -- tentative de reconnexion (toutes les 5 secondes)\n        end,\n    })\nend\n \n-- fonction de gestion des données lues\n-- normalement c'est là que les données rapportées par l'appareil seront traitées\nfunction QuickApp:onDataReceived(data)\n    --self:trace(\"onDataReceived\", data)\n    power = string.find(data, \"PW.\")\n    volume = string.find(data, \"MV%d\")\n    formatsonor = string.find(data, \"MS.\")\n    source = string.find(data, \"SI.\")\n    if power then\n        if string.sub(data, 3, #data - 1) == \"STANDBY\" then\n                self.isOn = false\n                self:updateView(\"lblSource\", \"text\", \"Source: N/A\")\n                self:updateView(\"lblSur\", \"text\", \"Sound mode: N/A\")\n                self:updateView(\"lblVolStat\", \"text\", \"Volume: N/A\")\n                self:updateView(\"Slidervolume\", \"value\", \"0\")\n                self:updateProperty(\"value\", false)\n        else self.isOn = true self:updateProperty(\"value\", true)\n        end\n    end\n    if self.isOn then\n        if volume then\n            local statSliderVol = string.sub(data, 3, #data-1)\n            if string.len(statSliderVol) == 3 then statSliderVol = string.sub(statSliderVol, 1, 2) end\n            self:updateView(\"lblVolStat\", \"text\", \"Volume: \" ..statSliderVol ..\" %\")\n            self:updateView(\"Slidervolume\", \"value\", statSliderVol) -- updating the text for 'Slidervolume'.\n        end\n        if formatsonor then\n        self:updateView(\"lblSur\", \"text\", \"Mode Surround: \" ..string.sub(data, formatsonor + 2))\n        self:trace(\"Mode Surround: \" ..string.sub(data, formatsonor + 2))\n        end\n        if source then\n        source = string.sub(data, source + 2)\n            sourcetable = {\n                -- VOS APPAREILS ICI -------------------------------------------\n                MPLAY = \"APPLE TV4\",\n                --SAT/CBL = \"FREEBOX\", --A VERIFIER SUR AMPLI ET PC\n                BD = \"PS4\",\n                TV = \"TV SONY\"\n                -- VOS APPAREILS ICI -------------------------------------------\n            }\n            translatesource = sourcetable[string.sub(source, 1, #source -1)]\n            if translatesource == nil then translatesource = source end\n            self:updateView(\"lblSource\", \"text\", \"Source: \" ..translatesource)\n            self:trace(\"source: \" ..translatesource)\n            self:trace(\"FIN ========================================================\")\n        end\n    end\nend\n--------------------------------------------------------------------------------------------------------------------------------------\n-- REFRESH\n--------------------------------------------------------------------------------------------------------------------------------------\n-- fonction refresh du QA\nfunction QuickApp:refresh()\nif self.isconnected then \nself:getinfo()\nend\nfibaro.setTimeout(self.pollingTime, function() self:refresh() end) -- looping part\nend\n--------------------------------------------------------------------------------------------------------------------------------------\n--                                                              FIN DU CODE                                                         --\n--------------------------------------------------------------------------------------------------------------------------------------"}]}